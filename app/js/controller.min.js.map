{"version":3,"sources":["controller.js"],"names":["myApp","angular","module","controller","$rootScope","$scope","$http","$timeout","lang","get","success","response","labels","find","artist","color","expansion","rarity","subtype","type","search","console","log","cards","post","JSON","stringify","mode","value","$elemMatch","$all","sections","section","options","addSelected","input","undefined","push","i","name","selected","removeSelected","index","splice","$parent","select","Scrollbar","document","querySelector","init","$watch","refreshDropdown","filtered","length"],"mappings":"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","file":"controller.min.js","sourcesContent":["var myApp = angular.module('myApp');\r\n\r\nmyApp.controller('MainController', ['$rootScope', '$scope', '$http', '$timeout', ($rootScope, $scope, $http, $timeout)=>{\r\n    $rootScope.lang = 'en';\r\n\r\n    $http.get('/api/label/lang/' + $rootScope.lang).success((response)=>{\r\n        $rootScope.labels = response.labels;\r\n    });\r\n\r\n    $rootScope.find = {\r\n        artist: [],\r\n        color: [],\r\n        expansion: [],\r\n        rarity: [],\r\n        subtype: [],\r\n        type: []\r\n    }\r\n\r\n\r\n    $rootScope.search = ()=>{\r\n        console.log($rootScope.find);\r\n\r\n        $http.get('/api/card').success((response)=>{\r\n            $scope.cards = response;\r\n        });\r\n        //              $http.post('/api/cards/find', JSON.stringify());\r\n    };\r\n\r\n//    const source = [],\r\n//          target = [];\r\n//\r\n//    var checkByName = (name)=>{\r\n//        var exist = false;\r\n//        for(let i in target){\r\n//            if(target[i].name === name){\r\n//                exist = true;\r\n//            }\r\n//        }\r\n//        return exist;\r\n//    }\r\n//\r\n//    var getIndexByName = (name)=>{\r\n//        for(let i in target){\r\n//            if(target[i].name === name){\r\n//                return i;\r\n//            }\r\n//        }\r\n//        return false;\r\n//    }\r\n//\r\n//\r\n//    for(let i in source){\r\n//        let index;\r\n//        if(index = getIndexByName(source[i].name)){\r\n//            target[index].expansion.push(source[i].expansion);\r\n//            target[index].version.push({\r\n//                expansion: source[i].expansion,\r\n//                number: source[i].number,\r\n//                rarity: source[i].rarity,\r\n//                artist: [source[i].artist],\r\n//                image: '',\r\n//                flavor: '',\r\n//                have: source[i].have,\r\n//                spent: source[i].spent,\r\n//                acquire: source[i].get,\r\n//                source: source[i].source            \r\n//            });\r\n//        } else {\r\n//            target.push({\r\n//                name: source[i].name,\r\n//                color: source[i].color,\r\n//                type: [],\r\n//                subtype: [],\r\n//                cmc: 0,\r\n//                mc: 0,\r\n//                power: 0,\r\n//                toughness: 0,\r\n//                text: '',\r\n//                expansion: [source[i].expansion],\r\n//                version: [\r\n//                    {\r\n//                        expansion: source[i].expansion,\r\n//                        number: source[i].number,\r\n//                        rarity: source[i].rarity,\r\n//                        artist: [source[i].artist],\r\n//                        image: '',\r\n//                        flavor: '',\r\n//                        have: source[i].have,\r\n//                        spent: source[i].spent,\r\n//                        acquire: source[i].get,\r\n//                        source: source[i].source\r\n//                    }\r\n//                ]\r\n//            });\r\n//        }\r\n//    }\r\n//\r\n//    console.log(target);\r\n\r\n    //            $http.post('/api/card/insert', JSON.stringify(target)).\r\n    //            success((response)=>{\r\n    //                console.log('ok');\r\n    //            });\r\n\r\n    //    $http.post('/api/card/find', JSON.stringify(\r\n    //        {'color': {$all: ['W', 'R']}}\r\n    //    )).success((response)=>{\r\n    //        console.log(response);\r\n    //    });\r\n    //\r\n    //    $http.post('/api/card/find', JSON.stringify(\r\n    //        {'color': {$in: ['W', 'R']}}\r\n    //    )).success((response)=>{\r\n    //        console.log(response);\r\n    //    });\r\n    //\r\n    //    $http.post('/api/card/find', JSON.stringify(\r\n    //        {'version': {$elemMatch: {'have': 0, expansion: 69}}}\r\n    //    )).success((response)=>{\r\n    //        console.log(response);\r\n    //    });\r\n\r\n    $http.post('/api/card/find', JSON.stringify({\r\n        'name': [\r\n            {\r\n                mode: 0,\r\n                value: 'elf'\r\n            },\r\n            {\r\n                mode: 1,\r\n                value: 'oo'\r\n            },\r\n            {\r\n                mode: 1,\r\n                value: 'll'\r\n            },\r\n            {\r\n                mode: 2,\r\n                value: 'll'\r\n            }\r\n        ],\r\n        'version': {$elemMatch: {'have': 0, expansion: 69}},\r\n        'color': {$all: ['W', 'R']}\r\n    })).success((response)=>{\r\n        console.log(response);\r\n    });\r\n}]);\r\n\r\nconst sections = ['artist', 'color', 'expansion', 'rarity', 'subtype', 'type'];\r\nfor(let section of sections){\r\n    myApp.controller(section + '-ctrl', ['$rootScope', '$scope', '$http', '$timeout', ($rootScope, $scope, $http, $timeout)=>{\r\n        $scope.options = [];\r\n\r\n        $scope.addSelected = ()=>{\r\n            if($scope.input !== undefined){\r\n                $rootScope.find[section].push($scope.input);\r\n                for(let i in $scope.options){\r\n                    if($scope.options[i].name === $scope.input){\r\n                        $scope.options[i].selected = true;\r\n                    }\r\n                }\r\n                $scope.input = undefined;\r\n            }\r\n        };\r\n\r\n        $scope.removeSelected = (index)=>{\r\n            for(let i in $scope.options){\r\n                if($scope.options[i].name === $rootScope.find[section][index]){\r\n                    $scope.options[i].selected = false;\r\n                }\r\n            }\r\n            $rootScope.find[section].splice(index, 1);\r\n        };\r\n    }]);\r\n}\r\n\r\nfor(let section of sections){\r\n    myApp.controller(section + '-select-ctrl', ['$rootScope', '$scope', '$http', '$timeout', ($rootScope, $scope, $http, $timeout)=>{\r\n        $http.get('/api/' + section).\r\n        success((response)=>{\r\n            $scope.$parent.options = response;\r\n            for(let i in $scope.$parent.options){\r\n                $scope.$parent.options[i].selected = false;\r\n            }\r\n            $timeout(()=>{\r\n                $scope.select = new Scrollbar(document.querySelector('#' + section));\r\n                $scope.select.init();\r\n                $scope.$watch('filtered', ()=>{\r\n                    $timeout(()=>{\r\n                        $scope.select.refreshDropdown($scope.filtered.length)\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }]);\r\n}"]}