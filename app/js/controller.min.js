'use strict';

var myApp = angular.module('myApp');

myApp.controller('MainController', ['$rootScope', '$scope', '$http', '$timeout', function ($rootScope, $scope, $http, $timeout) {
    $rootScope.lang = 'en';

    $http.get('/api/label/lang/' + $rootScope.lang).success(function (response) {
        $rootScope.labels = response.labels;
    });

    $rootScope.find = {
        artist: [],
        color: [],
        expansion: [],
        rarity: [],
        subtype: [],
        type: []
    };

    $rootScope.search = function () {
        console.log($rootScope.find);

        $http.get('/api/card').success(function (response) {
            $scope.cards = response;
        });
        //              $http.post('/api/cards/find', JSON.stringify());
    };

    //    const source = [],
    //          target = [];
    //
    //    var checkByName = (name)=>{
    //        var exist = false;
    //        for(let i in target){
    //            if(target[i].name === name){
    //                exist = true;
    //            }
    //        }
    //        return exist;
    //    }
    //
    //    var getIndexByName = (name)=>{
    //        for(let i in target){
    //            if(target[i].name === name){
    //                return i;
    //            }
    //        }
    //        return false;
    //    }
    //
    //
    //    for(let i in source){
    //        let index;
    //        if(index = getIndexByName(source[i].name)){
    //            target[index].expansion.push(source[i].expansion);
    //            target[index].version.push({
    //                expansion: source[i].expansion,
    //                number: source[i].number,
    //                rarity: source[i].rarity,
    //                artist: [source[i].artist],
    //                image: '',
    //                flavor: '',
    //                have: source[i].have,
    //                spent: source[i].spent,
    //                acquire: source[i].get,
    //                source: source[i].source            
    //            });
    //        } else {
    //            target.push({
    //                name: source[i].name,
    //                color: source[i].color,
    //                type: [],
    //                subtype: [],
    //                cmc: 0,
    //                mc: 0,
    //                power: 0,
    //                toughness: 0,
    //                text: '',
    //                expansion: [source[i].expansion],
    //                version: [
    //                    {
    //                        expansion: source[i].expansion,
    //                        number: source[i].number,
    //                        rarity: source[i].rarity,
    //                        artist: [source[i].artist],
    //                        image: '',
    //                        flavor: '',
    //                        have: source[i].have,
    //                        spent: source[i].spent,
    //                        acquire: source[i].get,
    //                        source: source[i].source
    //                    }
    //                ]
    //            });
    //        }
    //    }
    //
    //    console.log(target);

    //            $http.post('/api/card/insert', JSON.stringify(target)).
    //            success((response)=>{
    //                console.log('ok');
    //            });

    //    $http.post('/api/card/find', JSON.stringify(
    //        {'color': {$all: ['W', 'R']}}
    //    )).success((response)=>{
    //        console.log(response);
    //    });
    //
    //    $http.post('/api/card/find', JSON.stringify(
    //        {'color': {$in: ['W', 'R']}}
    //    )).success((response)=>{
    //        console.log(response);
    //    });
    //
    //    $http.post('/api/card/find', JSON.stringify(
    //        {'version': {$elemMatch: {'have': 0, expansion: 69}}}
    //    )).success((response)=>{
    //        console.log(response);
    //    });

    $http.post('/api/card/find', JSON.stringify({
        'name': [{
            mode: 0,
            value: 'elf'
        }, {
            mode: 1,
            value: 'oo'
        }, {
            mode: 1,
            value: 'll'
        }, {
            mode: 2,
            value: 'll'
        }],
        'version': { $elemMatch: { 'have': 0, expansion: 69 } },
        'color': { $all: ['W', 'R'] }
    })).success(function (response) {
        console.log(response);
    });
}]);

var sections = ['artist', 'color', 'expansion', 'rarity', 'subtype', 'type'];
var _iteratorNormalCompletion = true;
var _didIteratorError = false;
var _iteratorError = undefined;

try {
    var _loop = function _loop() {
        var section = _step.value;

        myApp.controller(section + '-ctrl', ['$rootScope', '$scope', '$http', '$timeout', function ($rootScope, $scope, $http, $timeout) {
            $scope.options = [];

            $scope.addSelected = function () {
                if ($scope.input !== undefined) {
                    $rootScope.find[section].push($scope.input);
                    for (var i in $scope.options) {
                        if ($scope.options[i].name === $scope.input) {
                            $scope.options[i].selected = true;
                        }
                    }
                    $scope.input = undefined;
                }
            };

            $scope.removeSelected = function (index) {
                for (var i in $scope.options) {
                    if ($scope.options[i].name === $rootScope.find[section][index]) {
                        $scope.options[i].selected = false;
                    }
                }
                $rootScope.find[section].splice(index, 1);
            };
        }]);
    };

    for (var _iterator = sections[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        _loop();
    }
} catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
} finally {
    try {
        if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
        }
    } finally {
        if (_didIteratorError) {
            throw _iteratorError;
        }
    }
}

var _iteratorNormalCompletion2 = true;
var _didIteratorError2 = false;
var _iteratorError2 = undefined;

try {
    var _loop2 = function _loop2() {
        var section = _step2.value;

        myApp.controller(section + '-select-ctrl', ['$rootScope', '$scope', '$http', '$timeout', function ($rootScope, $scope, $http, $timeout) {
            $http.get('/api/' + section).success(function (response) {
                $scope.$parent.options = response;
                for (var i in $scope.$parent.options) {
                    $scope.$parent.options[i].selected = false;
                }
                $timeout(function () {
                    $scope.select = new Scrollbar(document.querySelector('#' + section));
                    $scope.select.init();
                    $scope.$watch('filtered', function () {
                        $timeout(function () {
                            $scope.select.refreshDropdown($scope.filtered.length);
                        });
                    });
                });
            });
        }]);
    };

    for (var _iterator2 = sections[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        _loop2();
    }
} catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
} finally {
    try {
        if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
        }
    } finally {
        if (_didIteratorError2) {
            throw _iteratorError2;
        }
    }
}